{"ast":null,"code":"import Vuex from \"vuex\";\nexport default new Vuex.Store({\n  state: {\n    products: []\n  },\n  mutations: {\n    setProducts(state, products) {\n      state.products = products;\n    }\n\n  },\n  actions: {\n    fetchAllProducts(store) {\n      fetch(\"https://fakestoreapi.com/products/1\").then(res => res.json()).then(json => console.log(json)).then(json => {\n        store.commit(\"setProducts\", json);\n        return store.state.products;\n      }).catch(err => console.error(err));\n    }\n\n  },\n  getters: {\n    products(state) {\n      return state.products;\n    }\n\n  }\n});","map":{"version":3,"sources":["/Users/hugocrozet/Documents/Website/test-technique/src/store/index.js"],"names":["Vuex","Store","state","products","mutations","setProducts","actions","fetchAllProducts","store","fetch","then","res","json","console","log","commit","catch","err","error","getters"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,eAAe,IAAIA,IAAI,CAACC,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GADqB;AAI5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,CAACH,KAAD,EAAQC,QAAR,EAAkB;AAC3BD,MAAAA,KAAK,CAACC,QAAN,GAAiBA,QAAjB;AACD;;AAHQ,GAJiB;AAS5BG,EAAAA,OAAO,EAAE;AACPC,IAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACtBC,MAAAA,KAAK,CAAC,qCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESE,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFlB,EAGGF,IAHH,CAGSE,IAAD,IAAU;AACdJ,QAAAA,KAAK,CAACO,MAAN,CAAa,aAAb,EAA4BH,IAA5B;AACA,eAAOJ,KAAK,CAACN,KAAN,CAAYC,QAAnB;AACD,OANH,EAOGa,KAPH,CAOUC,GAAD,IAASJ,OAAO,CAACK,KAAR,CAAcD,GAAd,CAPlB;AAQD;;AAVM,GATmB;AAsB5BE,EAAAA,OAAO,EAAE;AACPhB,IAAAA,QAAQ,CAACD,KAAD,EAAQ;AACd,aAAOA,KAAK,CAACC,QAAb;AACD;;AAHM;AAtBmB,CAAf,CAAf","sourcesContent":["import Vuex from \"vuex\";\n\nexport default new Vuex.Store({\n  state: {\n    products: [],\n  },\n  mutations: {\n    setProducts(state, products) {\n      state.products = products;\n    },\n  },\n  actions: {\n    fetchAllProducts(store) {\n      fetch(\"https://fakestoreapi.com/products/1\")\n        .then((res) => res.json())\n        .then((json) => console.log(json))\n        .then((json) => {\n          store.commit(\"setProducts\", json);\n          return store.state.products;\n        })\n        .catch((err) => console.error(err));\n    },\n  },\n\n  getters: {\n    products(state) {\n      return state.products;\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}