{"ast":null,"code":"import Vuex from \"vuex\";\nexport default new Vuex.Store({\n  state: {\n    products: []\n  },\n  mutations: {\n    setProducts(state, products) {\n      state.products = products;\n    }\n\n  },\n  actions: {\n    fetchAllProducts(context) {\n      return fetch(\"https://restcountries.eu/rest/v2/all\").then(res => res.json()).then(json => console.log(json)).then(data => {\n        context.commit(\"setProducts\", data);\n      }).catch(err => console.error(err));\n    }\n\n  },\n  getters: {\n    products(state) {\n      return state.products;\n    }\n\n  }\n});","map":{"version":3,"sources":["/Users/hugocrozet/Documents/Website/test-technique/src/store/index.js"],"names":["Vuex","Store","state","products","mutations","setProducts","actions","fetchAllProducts","context","fetch","then","res","json","console","log","data","commit","catch","err","error","getters"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,eAAe,IAAIA,IAAI,CAACC,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GADqB;AAI5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,CAACH,KAAD,EAAQC,QAAR,EAAkB;AAC3BD,MAAAA,KAAK,CAACC,QAAN,GAAiBA,QAAjB;AACD;;AAHQ,GAJiB;AAS5BG,EAAAA,OAAO,EAAE;AACPC,IAAAA,gBAAgB,CAACC,OAAD,EAAU;AACxB,aAAOC,KAAK,CAAC,sCAAD,CAAL,CACJC,IADI,CACEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADV,EAEJF,IAFI,CAEEE,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFX,EAGJF,IAHI,CAGEK,IAAD,IAAU;AACdP,QAAAA,OAAO,CAACQ,MAAR,CAAe,aAAf,EAA8BD,IAA9B;AACD,OALI,EAMJE,KANI,CAMGC,GAAD,IAASL,OAAO,CAACM,KAAR,CAAcD,GAAd,CANX,CAAP;AAOD;;AATM,GATmB;AAoB5BE,EAAAA,OAAO,EAAE;AACPjB,IAAAA,QAAQ,CAACD,KAAD,EAAQ;AACd,aAAOA,KAAK,CAACC,QAAb;AACD;;AAHM;AApBmB,CAAf,CAAf","sourcesContent":["import Vuex from \"vuex\";\n\nexport default new Vuex.Store({\n  state: {\n    products: [],\n  },\n  mutations: {\n    setProducts(state, products) {\n      state.products = products;\n    },\n  },\n  actions: {\n    fetchAllProducts(context) {\n      return fetch(\"https://restcountries.eu/rest/v2/all\")\n        .then((res) => res.json())\n        .then((json) => console.log(json))\n        .then((data) => {\n          context.commit(\"setProducts\", data);\n        })\n        .catch((err) => console.error(err));\n    },\n  },\n  getters: {\n    products(state) {\n      return state.products;\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}